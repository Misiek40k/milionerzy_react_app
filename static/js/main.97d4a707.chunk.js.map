{"version":3,"sources":["Setup.js","Background.js","helpers.js","SidePanel.js","Questions.js","EndGame.js","Game.js","App.js","index.js"],"names":["Setup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmitHandler","event","preventDefault","_this$state","state","name","difficulty","trim","length","props","onSubmit","redirect","alert","options","value","bind","assertThisInitialized","onChangeHandler","_event$target","target","setState","defineProperty","history","push","item","react_default","a","createElement","key","label","className","htmlFor","onChange","id","map","renderOption","Component","Background","children","questionsList","price","isGuaranteed","SidePanel","renderItem","_ref","index","isGuaranteened","questionNumber","isCurrent","lastQuestionIndex","isAnswered","concat","Questions","renderAnswer","answer","onClick","onAnswerClick","String","fromCharCode","_this$props","question","answers","EndGame","username","reward","slice","find","_ref3","getGuaranteedReward","Link","to","Game","questions","currentQuestionNumber","hasWon","isFinished","getQuestions","checkAnswer","hasStarted","replace","_this2","axios","get","params","then","_ref$data$results","data","results","_ref2","category","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","_this3","currentQuestion","prevState","_ref$incorrectAnswers","src_EndGame","src_Background","src_Questions","shuffle","toConsumableArray","src_SidePanel","App","setupGame","callback","BrowserRouter","Switch","Route","exact","path","render","src_Setup","src_Game","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97d4a707.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Setup extends Component {\r\n    constructor () {\r\n        super()\r\n        \r\n        \r\n        this.state = {\r\n            name: '',\r\n            difficulty: this.options[0].value\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n        this.redirect = this.redirect.bind(this)\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const {\r\n            name,\r\n            difficulty\r\n        } = this.state\r\n\r\n        if(!name.trim().length) {\r\n            alert('Name jest wymagane')\r\n            return\r\n        }\r\n\r\n        this.props.onSubmit(name, difficulty, this.redirect)\r\n    }\r\n\r\n    onChangeHandler (event) {\r\n        const {\r\n            name,\r\n            value\r\n        } = event.target\r\n\r\n        this.setState({ [name]: value})\r\n    }\r\n\r\n    redirect () {\r\n        this.props.history.push('/game')\r\n    }\r\n\r\n    renderOption (item) {\r\n        \r\n            return(\r\n            <option \r\n                key={item.value}\r\n                value={item.value}\r\n            >\r\n                {item.label}\r\n            </option>\r\n            )\r\n    }\r\n\r\n    get options () {\r\n        return [\r\n            {\r\n                value: 'easy',\r\n                label: 'easy'\r\n            },\r\n            {\r\n                value: 'medium',\r\n                label: 'medium'\r\n            },\r\n            {\r\n                value: 'hard',\r\n                label: 'hard'\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='l-centered'>\r\n            \r\n            <form className='f-start' onSubmit={this.onSubmitHandler}>\r\n                <label htmlFor='name' className='f-start__control'>Name </label>\r\n                <input \r\n                className='f-start__control'\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeHandler}\r\n                    name='name'\r\n                    id='name'\r\n                />\r\n\r\n\r\n                <select\r\n                    className='f-start__control'\r\n                    name='difficulty'\r\n                    id='difficulty'\r\n                    value={this.state.difficulty}\r\n                    onChange={this.onChangeHandler}>\r\n\r\n                    {this.options.map(this.renderOption)}\r\n                </select>\r\n                <button className='f-start__action'>Submit</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSetup.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Setup;\r\n","import React from 'react';\r\n\r\nconst Background = props => {\r\n        return (\r\n            <div className='c-background'>\r\n                {props.children}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Background;\r\n","import axios from 'axios'\r\n\r\nconst questionsUrl = 'http://react-workshop-api.herokuapp.com'\r\n\r\nexport const fetchQuestions = difficulty => axios.get(questionsUrl, {\r\n  params: {\r\n    difficulty\r\n  }\r\n})\r\n.then(({ data: { results = [] } }) => results.map(({\r\n  category,\r\n  question,\r\n  correct_answer,\r\n  incorrect_answers\r\n}) => ({\r\n  category,\r\n  question,\r\n  correctAnswer: correct_answer,\r\n  incorrectAnswers: incorrect_answers\r\n})))\r\n\r\nexport const questionsList = [\r\n  {\r\n    price: 1000000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 500000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 250000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 125000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 75000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 40000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 20000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 10000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 5000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 2000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 1000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 500,\r\n    isGuaranteed: false\r\n  }\r\n]\r\n\r\nexport const getGuaranteedReward = questionNumber => {\r\n  if (!questionNumber) return 0\r\n\r\n  const reward = questionsList\r\n    .slice(-questionNumber)\r\n    .find(({ isGuaranteed }) => isGuaranteed)\r\n\r\n  return reward ? reward.price : 0\r\n}\r\n","import React, { Component } from 'react';\r\nimport { questionsList } from './helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SidePanel extends Component {\r\n\r\n    get lastQuestionIndex () {\r\n        return questionsList.length -1\r\n    }\r\n\r\n    renderItem = ({price, isGuaranteened}, index) => {\r\n        const {\r\n            questionNumber\r\n        } = this.props\r\n\r\n        const isCurrent = questionNumber === (this.lastQuestionIndex - index)\r\n        const isAnswered = questionNumber > (this.lastQuestionIndex - index)\r\n\r\n        \r\n        const className = `c-status__item ${isCurrent ? 'is-active' : ''} ${isAnswered ? 'is-done' : ''} ${isGuaranteened ? 'is-special': ''}`\r\n    \r\n        return (\r\n            <li \r\n                key={price}\r\n                className={className}\r\n            >\r\n                <span className='c-status__indicator'>\r\n                    {this.lastQuestionIndex - index}\r\n                </span>\r\n\r\n                <span className='c-value'>\r\n                    {price}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='c-side'>\r\n                <ul>\r\n                    {questionsList.map(this.renderItem)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidePanel.propTypes = {\r\n    questionNumber: PropTypes.number\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Questions extends Component {\r\n    renderAnswer = (answer, index) => {\r\n        return(\r\n            <li \r\n                key={index}\r\n                className='c-question'\r\n                onClick={this.props.onAnswerClick(answer)}\r\n            >\r\n                <span className='c-question__label'>\r\n                    {String.fromCharCode(65 + index)}: {answer}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            question,\r\n            answers\r\n       } = this.props\r\n\r\n        return (\r\n            <div className='c-questions'>\r\n                <p className='c-questions__title c-question'>{question}</p>\r\n                <ul className='c-questions__list'>\r\n                    {answers.map(this.renderAnswer)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nQuestions.propTypes = {\r\n    answers: PropTypes.array,\r\n    question: PropTypes.string,\r\n    onAnswerClick: PropTypes.func\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getGuaranteedReward} from './helpers';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n//TODO set app state hasStarted to false on click on the link or in the game\r\nconst EndGame = props => {\r\n    \r\n        return (\r\n            <div className='l-end'>\r\n                <p>Game Over {props.username}</p>\r\n                <p>You Won {getGuaranteedReward(props.questionNumber)} $</p>\r\n                <Link\r\n                    to={'/'}\r\n                >\r\n                    Restart\r\n                </Link>\r\n            </div>\r\n        );\r\n}\r\n\r\nEndGame.propTypes = {\r\n    questionNumber: PropTypes.number\r\n}\r\n\r\nexport default EndGame;\r\n","import React, { Component } from 'react';\r\nimport Background from './Background';\r\nimport SidePanel from './SidePanel';\r\nimport Questions from './Questions';\r\nimport { fetchQuestions } from './helpers'\r\nimport shuffle from 'lodash/shuffle'\r\nimport EndGame from './EndGame';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Game extends Component {\r\n    constructor () {\r\n        super()\r\n\r\n        this.state = {\r\n            questions: [],\r\n            currentQuestionNumber: 0,\r\n            hasWon: false,\r\n            isFinished: false\r\n        }\r\n\r\n        this.getQuestions = this.getQuestions.bind(this)\r\n        this.checkAnswer = this.checkAnswer.bind(this)\r\n    }\r\n\r\n    get currentQuestion () {\r\n        return this.state.questions[this.state.currentQuestionNumber]\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (!this.props.hasStarted) {\r\n            this.props.history.replace('/')\r\n        }\r\n        this.getQuestions()\r\n    }\r\n\r\n    getQuestions () {\r\n        fetchQuestions(this.props.difficulty).then(data => {\r\n            this.setState({questions: data})\r\n        })\r\n    }\r\n\r\n    checkAnswer (answer) {\r\n        return (event) => {\r\n            if (answer === this.currentQuestion.correctAnswer) {\r\n                if (this.state.currentQuestionNumber < 11) {\r\n                    this.setState(prevState => {\r\n                        return {\r\n                            currentQuestionNumber: prevState.currentQuestionNumber +1\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        hasWon: true,\r\n                        isFinished: true\r\n                    })\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    hasWon: false,\r\n                    isFinished: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {\r\n            correctAnswer,\r\n            incorrectAnswers= [],\r\n            question \r\n        } = this.currentQuestion || {}\r\n\r\n        return this.state.isFinished\r\n        ? <EndGame \r\n            username={this.props.username}\r\n            questionNumber={this.state.currentQuestionNumber}\r\n\r\n        />\r\n        :(\r\n            <div className='l-game'>\r\n                <Background>\r\n                    <Questions\r\n                        answers={shuffle([correctAnswer, ...incorrectAnswers])}\r\n                        question={question}\r\n                        onAnswerClick={this.checkAnswer}\r\n                    />\r\n                </Background>\r\n                <SidePanel\r\n                    questionNumber={this.state.currentQuestionNumber}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGame.propTypes = {\r\n    username: PropTypes.string,\r\n    history: PropTypes.object,\r\n    hasStarted: PropTypes.bool,\r\n    difficulty: PropTypes.string\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport Setup from './Setup'\r\nimport Game from './Game'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n  \r\n    this.state = {\r\n      hasStarted: false,\r\n      name: '',\r\n      difficulty: ''\r\n    }\r\n    this.setupGame = this.setupGame.bind(this)\r\n  }\r\n\r\n  setupGame (name, difficulty, callback) {\r\n    \r\n    this.setState({\r\n      name,\r\n      difficulty,\r\n      hasStarted: true\r\n    },callback)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/'\r\n            // Component={Setup}\r\n            render={ ({history}) => <Setup \r\n              onSubmit={this.setupGame}\r\n              history={history}\r\n              />}\r\n          />\r\n          <Route \r\n            exact\r\n            path = '/game'\r\n            render={({history}) => (\r\n              <Game\r\n                hasStarted = {this.state.hasStarted}\r\n                history={history}\r\n                username={this.state.name}\r\n                difficulty={this.state.difficulty}\r\n              />\r\n            )}\r\n          />\r\n          <Route \r\n            render={() => <p>404 Page Not Found</p>}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}